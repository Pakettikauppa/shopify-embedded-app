sudo: false

language: php

php:
  - '7.4'
  - '8.0'
  - nightly

matrix:
  include:
    # Arbitrary PHP version to run the sniffs against.
  allow_failures:
  - php: '8.0'
  - php: nightly  # Old phpunit not compatible with PHP 8.0.0 yet

before_script:
  # Install PHP_CodeSniffer with a specific version defined so that devs and Travis-CI will have exactly same standards
  - if [[ "$SNIFF" == "1" ]]; then export PHPCS_DIR=/tmp/phpcs; export PHPCS_VERSION=3.4.0; fi
  - if [[ "$SNIFF" == "1" ]]; then export SNIFFS_DIR=/tmp/sniffs; export SNIFFS_VERSION=1.0.0; fi
  # Install PHP_CodeSniffer
  - if [[ "$SNIFF" == "1" ]]; then wget https://github.com/squizlabs/PHP_CodeSniffer/archive/$PHPCS_VERSION.tar.gz -O $PHPCS_VERSION.tar.gz && tar -xf $PHPCS_VERSION.tar.gz && mv PHP_CodeSniffer-$PHPCS_VERSION $PHPCS_DIR; fi
  # Set install path for WordPress Coding Standards
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR; fi
  # After CodeSniffer install you should refresh your path
  - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi

script:
  # Syntax check all PHP files and fail for any error text in STDERR
  - '! find . -type f -name "*.php" -exec php -d error_reporting=32767 -l {} \; 2>&1 >&- | grep "^"'
  # More extensive PHP Style Check
  - if [[ "$SNIFF" == "1" ]]; then $PHPCS_DIR/bin/phpcs -i; $PHPCS_DIR/bin/phpcs -n --standard=PSR2 app; fi

